Ext.data.JsonP.ImageTool({"tagname":"class","name":"ImageTool","autodetected":{},"files":[{"filename":"imagetool.js","href":"imagetool.html#ImageTool"}],"members":[{"name":"icon","tagname":"cfg","owner":"ImageTool","id":"cfg-icon","meta":{"required":true}},{"name":"isInteractive","tagname":"cfg","owner":"ImageTool","id":"cfg-isInteractive","meta":{}},{"name":"name","tagname":"cfg","owner":"ImageTool","id":"cfg-name","meta":{"required":true}},{"name":"title","tagname":"cfg","owner":"ImageTool","id":"cfg-title","meta":{"required":true}},{"name":"doAction","tagname":"method","owner":"ImageTool","id":"method-doAction","meta":{"abstract":true}},{"name":"getAction","tagname":"method","owner":"ImageTool","id":"method-getAction","meta":{}},{"name":"setupInterface","tagname":"method","owner":"ImageTool","id":"method-setupInterface","meta":{"abstract":true,"private":true}},{"name":"undoAction","tagname":"method","owner":"ImageTool","id":"method-undoAction","meta":{"abstract":true}}],"alternateClassNames":[],"aliases":{},"id":"class-ImageTool","short_doc":"Tools used within ImageEditor. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/imagetool.html#ImageTool' target='_blank'>imagetool.js</a></div></pre><div class='doc-contents'><p>Tools used within ImageEditor.</p>\n\n<h2>Simple tools</h2>\n\n<p>To register a simple tool like rotate, only implement the\n<a href=\"#!/api/ImageTool-method-doAction\" rel=\"ImageTool-method-doAction\" class=\"docClass\">doAction</a> and <a href=\"#!/api/ImageTool-method-undoAction\" rel=\"ImageTool-method-undoAction\" class=\"docClass\">undoAction</a> methods.</p>\n\n<pre><code>rotateClockwise = new ImageTool( {\n    name: 'rotateClockwise',\n    icon: 'rotate-clockwise',\n    title: 'Rotate clockwise'\n} );\n\nrotateClockwise.doAction = function ( image ) {\n    // Call Caman methods directly on image\n    image.rotate( 90 );\n    image.render();\n    return {};\n};\n\nrotateClockwise.undoAction = function ( image ) {\n    // The rotate tool doesn't need its action object to undo\n    image.rotate( -90 );\n    image.render();\n};\n\n// Register the tool before calling editor.initialize()\neditor.registerTool( rotateClockwise );\n</code></pre>\n\n<p>If the icon doesn't exist in OOjs UI, add the CSS class to render a\ncustom icon.</p>\n\n<pre><code>.oo-ui-icon-rotate-clockwise {\n    background-image: url( icons/rotate-clockwise.svg );\n}\n</code></pre>\n\n<h2>Interactive tools</h2>\n\n<p>Some tools, like crop, need an additional user interface to collect\ndata from the user and complete their action. For such tools set\n<a href=\"#!/api/ImageTool-cfg-isInteractive\" rel=\"ImageTool-cfg-isInteractive\" class=\"docClass\">isInteractive</a> to <code>true</code>. The editor will pass an\nOO.ui.PanelLayout to render the additional interface. The\n<a href=\"#!/api/ImageTool-method-doAction\" rel=\"ImageTool-method-doAction\" class=\"docClass\">doAction</a> and <a href=\"#!/api/ImageTool-method-undoAction\" rel=\"ImageTool-method-undoAction\" class=\"docClass\">undoAction</a> should still be structured\nthe same way as they are called by the undo and redo methods of the\neditor. The additional interface of the tool is responsible for calling\n<a href=\"#!/api/ImageTool-method-doAction\" rel=\"ImageTool-method-doAction\" class=\"docClass\">doAction</a> with the right parameters.</p>\n\n<pre><code>crop = new ImageTool( {\n    name: 'crop',\n    icon: 'crop',\n    title: 'Crop',\n    isInteractive: true\n} );\n\ncrop.setupInterface = function ( image, panel ) {\n    var controls;\n\n    this.widthInput = new OO.ui.TextInputWidget( { value: 20 } );\n    this.heightInput = new OO.ui.TextInputWidget( { value: 20 } );\n    this.xInput = new OO.ui.TextInputWidget( { value: 0 } );\n    this.yInput = new OO.ui.TextInputWidget( { value: 0 } );\n    this.crop = new OO.ui.ButtonWidget( {\n        label: 'Crop',\n        flags: [ 'primary', 'progressive' ]\n    } );\n    this.cancel = new OO.ui.ButtonWidget( {\n        label: 'Cancel',\n        flags: [ 'destructive' ]\n    } );\n\n    this.crop.on( 'click', function () {\n        var action = {\n            width: this.widthInput.getValue(),\n            height: this.heightInput.getValue(),\n            x: this.xInput.getValue(),\n            y: this.yInput.getValue()\n        };\n\n        // Call doAction from a UI event\n        this.deferred.resolve( this.doAction( image, action ) );\n    }.bind( this ) );\n\n    this.cancel.on( 'click', function () {\n        // Reject the deferred if tool couldn't complete the action\n        this.deferred.reject();\n    }.bind( this ) );\n\n    controls = new OO.ui.HorizontalLayout( {\n        items: [\n            this.widthInput,\n            this.heightInput,\n            this.xInput,\n            this.yInput,\n            this.crop,\n            this.cancel\n        ]\n    } );\n    panel.$element.append( controls.$element );\n};\n\ncrop.doAction = function ( image, action ) {\n    // Save old image data before cropping, will need this for undo\n    action.oldImageData = image.imageData;\n    image.crop( action.width, action.height, action.x, action.y );\n    image.render();\n    return action;\n};\n\ncrop.undoAction = function ( image, action ) {\n    // Restore the old image on the canvas\n    var canvas = image.canvas;\n    canvas.height = action.oldImageData.height;\n    canvas.width = action.oldImageData.width;\n    image.canvas.getContext( '2d' ).putImageData( action.oldImageData, 0, 0 );\n};\n\nthis.registerTool( crop );\n</code></pre>\n\n<p>See <a href=\"#!/api/ImageEditor-method-registerCoreTools\" rel=\"ImageEditor-method-registerCoreTools\" class=\"docClass\">ImageEditor.registerCoreTools</a> for more exaples.</p>\n\n<h2>Updating the toolbar</h2>\n\n<p>After registering the tool the update <a href=\"#!/api/ImageEditor-property-toolbarGroups\" rel=\"ImageEditor-property-toolbarGroups\" class=\"docClass\">ImageEditor.toolbarGroups</a> for it\nto show up in the editor's main toolbar.</p>\n\n<pre><code>editor.setToolbarGroup( editor.getToolbarGroup().push( {\n    type: 'bar',\n    includes: [ 'myNewTool' ]\n} ) );\n</code></pre>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Required config options</h3><div id='cfg-icon' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ImageTool'>ImageTool</span><br/><a href='source/imagetool.html#ImageTool-cfg-icon' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ImageTool-cfg-icon' class='name expandable'>icon</a> : string<span class=\"signature\"><span class='required' >required</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='cfg-name' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ImageTool'>ImageTool</span><br/><a href='source/imagetool.html#ImageTool-cfg-name' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ImageTool-cfg-name' class='name expandable'>name</a> : string<span class=\"signature\"><span class='required' >required</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='cfg-title' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ImageTool'>ImageTool</span><br/><a href='source/imagetool.html#ImageTool-cfg-title' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ImageTool-cfg-title' class='name expandable'>title</a> : string<span class=\"signature\"><span class='required' >required</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Optional config options</h3><div id='cfg-isInteractive' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ImageTool'>ImageTool</span><br/><a href='source/imagetool.html#ImageTool-cfg-isInteractive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ImageTool-cfg-isInteractive' class='name expandable'>isInteractive</a> : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>false</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-doAction' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ImageTool'>ImageTool</span><br/><a href='source/imagetool.html#ImageTool-method-doAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ImageTool-method-doAction' class='name expandable'>doAction</a>( <span class='pre'>image, [action]</span> ) : Object<span class=\"signature\"><span class='abstract' >abstract</span></span></div><div class='description'><div class='short'>Does the action of the tool. ...</div><div class='long'><p>Does the action of the tool.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>image</span> : Caman<div class='sub-desc'><p>Caman image object to be maupilated.</p>\n</div></li><li><span class='pre'>action</span> : Object (optional)<div class='sub-desc'><p>Passed when action is being re-done.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Returns an action object to be saved by the\neditor. This action should have data required by the tool to undo\nits action.</p>\n</div></li></ul></div></div></div><div id='method-getAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ImageTool'>ImageTool</span><br/><a href='source/imagetool.html#ImageTool-method-getAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ImageTool-method-getAction' class='name expandable'>getAction</a>( <span class='pre'>image, panel</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called for interactive tool. ...</div><div class='long'><p>Called for interactive tool. Returns a promise that should be\nresolved with the action object once the tool is done processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>image</span> : Caman<div class='sub-desc'><p>Caman image object to be maupilated.</p>\n</div></li><li><span class='pre'>panel</span> : OO.ui.PanelLayout<div class='sub-desc'><p>Panel object to render additional UI for the tool</p>\n</div></li></ul></div></div></div><div id='method-setupInterface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ImageTool'>ImageTool</span><br/><a href='source/imagetool.html#ImageTool-method-setupInterface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ImageTool-method-setupInterface' class='name expandable'>setupInterface</a>( <span class='pre'>image, panel</span> )<span class=\"signature\"><span class='abstract' >abstract</span><span class='private' >private</span></span></div><div class='description'><div class='short'>Called by getAction to setup the required UI elements for\nthe interactive tool. ...</div><div class='long'><p>Called by <a href=\"#!/api/ImageTool-method-getAction\" rel=\"ImageTool-method-getAction\" class=\"docClass\">getAction</a> to setup the required UI elements for\nthe interactive tool. It should setup the UI control that calls\n<a href=\"#!/api/ImageTool-method-doAction\" rel=\"ImageTool-method-doAction\" class=\"docClass\">doAction</a> with the required <code>action</code> object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>image</span> : Caman<div class='sub-desc'><p>Caman image object to be maupilated.</p>\n</div></li><li><span class='pre'>panel</span> : OO.ui.PanelLayout<div class='sub-desc'><p>Panel object to render additional UI for the tool</p>\n</div></li></ul></div></div></div><div id='method-undoAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ImageTool'>ImageTool</span><br/><a href='source/imagetool.html#ImageTool-method-undoAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ImageTool-method-undoAction' class='name expandable'>undoAction</a>( <span class='pre'>image, action</span> )<span class=\"signature\"><span class='abstract' >abstract</span></span></div><div class='description'><div class='short'>Undoes the action of the tool. ...</div><div class='long'><p>Undoes the action of the tool.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>image</span> : Caman<div class='sub-desc'><p>Caman image object to be maupilated.</p>\n</div></li><li><span class='pre'>action</span> : Object<div class='sub-desc'><p>Passes previously saved action data to undo.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});